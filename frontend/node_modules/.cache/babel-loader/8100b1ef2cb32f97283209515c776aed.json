{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahelqaq/Desktop/Programming/ee188/emoji-type/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DrawCanvas extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isDrawing: false,\n      lines: Immutable.List()\n    };\n  }\n\n  handleMouseDown(mouseEvent) {\n    if (mouseEvent.button != 0) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n    this.setState({\n      lines: this.state.lines.push(Immutable.List([point])),\n      isDrawing: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"drawCanvas\",\n      onMouseDown: this.handleMouseDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Cell(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => props.onClick(),\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cell;\n\nfunction MainGrid(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      value: 'qwe',\n      onClick: () => props.handleClick(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'rtyu',\n      onClick: () => props.handleClick(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'iop',\n      onClick: () => props.handleClick(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'asd',\n      onClick: () => props.handleClick(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'fgh',\n      onClick: () => props.handleClick(4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'jkl',\n      onClick: () => props.handleClick(5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'zxc',\n      onClick: () => props.handleClick(6)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'vb',\n      onClick: () => props.handleClick(7)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'nm',\n      onClick: () => props.handleClick(8)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = MainGrid;\n\nfunction renderCharCells(letters, eventListener) {\n  var num_chars = 4;\n  if (letters[2] === '0') num_chars = 2;else if (letters[3] === '0') num_chars = 3;\n  var cells = [];\n\n  for (let i = 0; i < num_chars; i++) {\n    if (i === 3) {\n      // push phantom button for spacing\n      cells.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"phantom_button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this));\n    }\n\n    cells.push( /*#__PURE__*/_jsxDEV(Cell, {\n      value: letters[i],\n      onClick: () => eventListener(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this));\n  }\n\n  return cells;\n}\n\nfunction renderSuggestionCells(words, eventListener) {\n  var num_suggestions = 0;\n  console.log(\"words reached are:\");\n  console.log(words);\n  if (words.length > 6) num_suggestions = 6;else num_suggestions = words.length;\n  var cells = [];\n\n  for (let i = 0; i < num_suggestions; i++) {\n    cells.push( /*#__PURE__*/_jsxDEV(Cell, {\n      value: words[i],\n      onClick: () => eventListener(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this));\n  }\n\n  return cells;\n}\n\nfunction CharGroupGrid(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"grid\",\n      children: renderCharCells(props.chars, props.handleClick)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"grid_header\",\n      children: \"Auto Suggestions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"grid\",\n      children: renderSuggestionCells(props.words, props.handleWordClick)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = CharGroupGrid;\n\nclass Keyboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: '',\n      letter_group: null,\n      all_char_groups: ['qwe', 'rtyu', 'iop', 'asd', 'fgh', 'jkl', 'zxc', 'vb', 'nm'],\n      suggestions: [],\n      emoji_mode: false\n    };\n  }\n\n  handleMainGridClick(i) {\n    var words = this.state.word.split(\" \");\n    var current_word = words[words.length - 1];\n    axios.get(\"http://192.168.1.206:8081/\" + current_word + \",\" + this.state.all_char_groups[i]).then(res => {\n      console.log(res);\n\n      if (res.data) {\n        console.log(res.data);\n        this.setState({\n          word: this.state.word,\n          letter_group: i,\n          all_char_groups: this.state.all_char_groups,\n          suggestions: res.data,\n          emoji_mode: false\n        });\n      } else {\n        this.setState({\n          word: this.state.word,\n          letter_group: i,\n          all_char_groups: this.state.all_char_groups,\n          suggestions: [],\n          emoji_mode: false\n        });\n      }\n    });\n  }\n\n  handleCharGridClick(i) {\n    this.setState({\n      word: this.state.word + this.state.all_char_groups[this.state.letter_group][i],\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: this.state.suggestions,\n      emoji_mode: false\n    });\n  }\n\n  handleWordClick(i) {\n    var iter = this.state.word.length - 1;\n    var new_phrase = this.state.word;\n\n    while (iter >= 0 && new_phrase[iter] !== \" \") {\n      new_phrase = new_phrase.substr(0, new_phrase.length - 1);\n      iter -= 1;\n    }\n\n    new_phrase += this.state.suggestions[i] + \" \";\n    this.setState({\n      word: new_phrase,\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  resetCharGroup() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: this.state.suggestions,\n      emoji_mode: false\n    });\n  }\n\n  activateEmojiMode() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: true\n    });\n  }\n\n  resetEmojiMode() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  delChar() {\n    this.setState({\n      word: this.state.word.length > 0 ? this.state.word.slice(0, -1) : '',\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  addSpace() {\n    this.setState({\n      word: this.state.word + ' ',\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  renderCharGroup() {\n    var letters = Array(4).fill('0');\n\n    switch (this.state.letter_group) {\n      case 1:\n        letters[0] = this.state.all_char_groups[1][0];\n        letters[1] = this.state.all_char_groups[1][1];\n        letters[2] = this.state.all_char_groups[1][2];\n        letters[3] = this.state.all_char_groups[1][3];\n        break;\n\n      case 7:\n      case 8:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        break;\n\n      default:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        letters[2] = this.state.all_char_groups[this.state.letter_group][2];\n    }\n\n    return /*#__PURE__*/_jsxDEV(CharGroupGrid, {\n      chars: letters,\n      words: this.state.suggestions,\n      handleClick: this.handleCharGridClick.bind(this),\n      handleWordClick: this.handleWordClick.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    if (this.state.emoji_mode) {\n      return /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"top_button\",\n            onClick: () => this.resetEmojiMode(),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"current_word\",\n          children: this.state.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.letter_group != null) {\n      return /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"top_button\",\n            onClick: () => this.resetCharGroup(),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), this.renderCharGroup()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"current_word\",\n          children: this.state.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"top_buttons\",\n            onClick: () => this.activateEmojiMode(),\n            children: \"emoji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"top_buttons\",\n            onClick: () => this.delChar(),\n            children: \"del\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MainGrid, {\n            handleClick: this.handleMainGridClick.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"space_button\",\n            onClick: () => this.addSpace(),\n            children: \"space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"current_word\",\n          children: this.state.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 364,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"MainGrid\");\n$RefreshReg$(_c3, \"CharGroupGrid\");","map":{"version":3,"sources":["/Users/abdullahelqaq/Desktop/Programming/ee188/emoji-type/frontend/src/index.js"],"names":["React","ReactDOM","axios","DrawCanvas","Component","constructor","state","isDrawing","lines","Immutable","List","handleMouseDown","mouseEvent","button","point","relativeCoordinatesForEvent","setState","push","render","Cell","props","onClick","value","MainGrid","handleClick","renderCharCells","letters","eventListener","num_chars","cells","i","renderSuggestionCells","words","num_suggestions","console","log","length","CharGroupGrid","chars","handleWordClick","Keyboard","word","letter_group","all_char_groups","suggestions","emoji_mode","handleMainGridClick","split","current_word","get","then","res","data","handleCharGridClick","iter","new_phrase","substr","resetCharGroup","activateEmojiMode","resetEmojiMode","delChar","slice","addSpace","renderCharGroup","Array","fill","bind","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from \"axios\";\n\nclass DrawCanvas extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isDrawing: false,\n      lines: Immutable.List(),\n    };\n  }\n\n  handleMouseDown(mouseEvent) {\n    if (mouseEvent.button != 0) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState({\n      lines: this.state.lines.push(Immutable.List([point])),\n      isDrawing: true,\n    });\n\n  }\n\n  render() {\n    return (\n      <div ref=\"drawCanvas\" onMouseDown={this.handleMouseDown} />\n    );\n  }\n}\n\nfunction Cell(props) {\n  return (\n    <button onClick={() => props.onClick()}>{props.value}</button>\n  );\n}\n\nfunction MainGrid(props) {\n  return (\n    <div class=\"grid\">\n      <Cell\n        value={'qwe'}\n        onClick={() => props.handleClick(0)}\n      />\n      <Cell\n        value={'rtyu'}\n        onClick={() => props.handleClick(1)}\n      />\n      <Cell\n        value={'iop'}\n        onClick={() => props.handleClick(2)}\n      />\n      <Cell\n        value={'asd'}\n        onClick={() => props.handleClick(3)}\n      />\n      <Cell\n        value={'fgh'}\n        onClick={() => props.handleClick(4)}\n      />\n      <Cell\n        value={'jkl'}\n        onClick={() => props.handleClick(5)}\n      />\n      <Cell\n        value={'zxc'}\n        onClick={() => props.handleClick(6)}\n      />\n      <Cell\n        value={'vb'}\n        onClick={() => props.handleClick(7)}\n      />\n      <Cell\n        value={'nm'}\n        onClick={() => props.handleClick(8)}\n      />\n    </div>\n  );\n}\n\nfunction renderCharCells(letters, eventListener) {\n  var num_chars = 4;\n  if (letters[2] === '0')\n    num_chars = 2;\n  else if (letters[3] === '0')\n    num_chars = 3;\n\n  var cells = [];\n  for (let i = 0; i < num_chars; i++) {\n    if (i === 3) {\n      // push phantom button for spacing\n      cells.push(\n        <button id=\"phantom_button\"></button>\n      );\n    }\n    cells.push(\n      <Cell\n        value={letters[i]}\n        onClick={() => eventListener(i)}\n      />\n    );\n  }\n  return cells;\n}\n\nfunction renderSuggestionCells(words, eventListener) {\n  var num_suggestions = 0;\n  console.log(\"words reached are:\");\n  console.log(words);\n  if (words.length > 6)\n    num_suggestions = 6\n  else\n    num_suggestions = words.length\n\n  var cells = [];\n  for (let i = 0; i < num_suggestions; i++) {\n    cells.push(\n      <Cell\n        value={words[i]}\n        onClick={() => eventListener(i)}\n      />\n    );\n  }\n  return cells;\n}\n\nfunction CharGroupGrid(props) {\n  return (\n    <div>\n      <div class=\"grid\">\n        {renderCharCells(props.chars, props.handleClick)}\n      </div>\n      <p id=\"grid_header\">Auto Suggestions:</p>\n      <div class=\"grid\">\n        {renderSuggestionCells(props.words, props.handleWordClick)}\n      </div>\n    </div>\n\n  );\n}\n\nclass Keyboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: '',\n      letter_group: null,\n      all_char_groups: ['qwe', 'rtyu', 'iop', 'asd', 'fgh', 'jkl', 'zxc', 'vb', 'nm'],\n      suggestions: [],\n      emoji_mode: false\n    };\n  }\n  \n  handleMainGridClick(i) {\n\n    var words = this.state.word.split(\" \");\n    var current_word = words[words.length-1];\n\n    axios.get(\"http://192.168.1.206:8081/\" + current_word + \",\" + this.state.all_char_groups[i]).then(res => {\n      console.log(res);\n      if (res.data) {\n        console.log(res.data)\n\n        this.setState({\n          word: this.state.word,\n          letter_group: i,\n          all_char_groups:  this.state.all_char_groups,\n          suggestions: res.data,\n          emoji_mode: false\n        });\n\n      } else {\n        this.setState({\n          word: this.state.word,\n          letter_group: i,\n          all_char_groups:  this.state.all_char_groups,\n          suggestions: [],\n          emoji_mode: false\n        });\n      }\n    });\n  }\n\n  handleCharGridClick(i) {\n    this.setState({\n      word: this.state.word + this.state.all_char_groups[this.state.letter_group][i],\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n      suggestions: this.state.suggestions,\n      emoji_mode: false\n    });\n  }\n\n  handleWordClick(i) {\n\n    var iter = this.state.word.length - 1;\n    var new_phrase = this.state.word;\n    \n    while (iter >= 0 && new_phrase[iter] !== \" \") {\n      new_phrase = new_phrase.substr(0, new_phrase.length - 1);\n      iter -= 1;\n    }\n\n    new_phrase += this.state.suggestions[i] + \" \";\n    \n    this.setState({\n      word: new_phrase,\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  resetCharGroup() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n      suggestions: this.state.suggestions,\n      emoji_mode: false\n    });\n  }\n\n  activateEmojiMode() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: true\n    })\n  }\n\n  resetEmojiMode() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    })\n  }\n\n  delChar() {\n    this.setState({\n      word: this.state.word.length > 0 ? this.state.word.slice(0, -1) : '',\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  addSpace() {\n    this.setState({\n      word: this.state.word + ' ',\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n      suggestions: [],\n      emoji_mode: false\n    });\n  }\n\n  renderCharGroup() {\n    var letters = Array(4).fill('0');\n\n    switch (this.state.letter_group) {\n      case 1:\n        letters[0] = this.state.all_char_groups[1][0];\n        letters[1] = this.state.all_char_groups[1][1];\n        letters[2] = this.state.all_char_groups[1][2];\n        letters[3] = this.state.all_char_groups[1][3];\n        break;\n      case 7:\n      case 8:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        break;\n      default:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        letters[2] = this.state.all_char_groups[this.state.letter_group][2];\n    }\n\n    return (\n      <CharGroupGrid chars={letters} words={this.state.suggestions} handleClick={this.handleCharGridClick.bind(this)} handleWordClick={this.handleWordClick.bind(this)}/>\n    );\n  }\n\n  render() {\n    if (this.state.emoji_mode) {\n      return (\n        <center>\n          < br/><br />< br/>< br/>< br/><br />< br/>< br/>\n          <div className=\"keyboard\">\n            <button\n              id=\"top_button\"\n              onClick={() => this.resetEmojiMode()}\n            >\n              &larr;\n            </button>\n\n\n\n          </div>\n          <br /><p id=\"current_word\">{this.state.word}</p>\n        </center>\n      );\n    }    \n    else if (this.state.letter_group != null) {\n      return (\n        <center>\n            < br/><br />< br/>< br/>< br/><br />< br/>< br/>\n            <div className=\"keyboard\">\n              <button\n                id=\"top_button\"\n                onClick={() => this.resetCharGroup()}\n              >\n                &larr;\n              </button>\n              {this.renderCharGroup()}\n            </div>\n            <br /><p id=\"current_word\">{this.state.word}</p>\n        </center>\n      );\n    } else {\n      return (\n        <center>\n            < br/><br />< br/>< br/>< br/><br />< br/>< br/>\n            <div className=\"keyboard\">\n              <button\n                id=\"top_buttons\"\n                onClick={() => this.activateEmojiMode()}\n              >\n                emoji\n              </button>\n              <button\n                id=\"top_buttons\"\n                onClick={() => this.delChar()}\n              >\n                del\n              </button>\n              <MainGrid handleClick={this.handleMainGridClick.bind(this)} />\n              <button\n                id=\"space_button\"\n                onClick={() => this.addSpace()}\n              >\n                space\n              </button>\n            </div>\n            <br /><p id=\"current_word\">{this.state.word}</p>\n        </center>\n      );\n    }\n  }\n}\n\nReactDOM.render(\n  <Keyboard />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}